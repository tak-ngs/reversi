:host {
  width: var(--cell-size);
  height: var(--cell-size);
  overflow: hidden;
  border: 1px solid black;
  box-sizing: border-box;
  display: flex;
  align-items: center;
  justify-content: center;
  transform-style: preserve-3d;
  perspective: 200px;
  position: relative;
  overflow: visible;
}

.dot {
  position: absolute;
  --dot-size: min(calc(var(--cell-size) * .2), 10px);
  --dot-offset: calc(var(--dot-size) / -2 - 1px);
  width: var(--dot-size);
  height: var(--dot-size);
  background-color: black;
  border-radius: 50%;

  &.top {
    top: var(--dot-offset);
  }

  &.right {
    right: var(--dot-offset);
  }

  &.bottom {
    bottom: var(--dot-offset);
  }

  &.left {
    left: var(--dot-offset);
  }
}

.stone-wrapper {
  display: flex;
  width: var(--stone-size);
  height: var(--stone-size);
  align-items: center;
  justify-content: center;
  position: relative;
}

.stone {
  display: block;
  width: var(--stone-size);
  height: var(--stone-size);
  border-radius: 50%;
  transition: transform 0.4s ease-in;
  box-sizing: border-box;
  transform-style: preserve-3d;
  position: relative;
  outline: none;
  box-shadow: 0;

  &.just-putted {

    .black-face,
    .white-face {
      outline: 3px solid #34a4ff;
      box-shadow: 0px 0px 0px 8px #34a4ff4a;
    }
  }

  &.wait-to-reverse {

    .black-face,
    .white-face {
      animation-name: glow;
      animation-duration: 3s;
      animation-delay: var(--manual-reverse-hint-delay, 5s);
      animation-timing-function: ease-in-out;
      animation-iteration-count: infinite;
    }
  }

  .black-face,
  .white-face {
    position: absolute;
    top: 0;
    display: block;
    box-sizing: border-box;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    transition-property: outline-width, box-shadow;
    transition-duration: .5s;
  }

  .black-face {
    background-color: var(--stone-color-black);
    border: #333 var(--stone-edge) solid;
  }

  .white-face {
    background-color: var(--stone-color-white);
    border: #ddd var(--stone-edge) solid;
    transform: translateZ(calc(-1 * var(--stone-height)));
  }
}

.stone.black {
  transform: rotateX(0deg) rotateZ(45deg);

}

.stone.white {
  transform: translateZ(calc(-1 * var(--stone-height))) rotateX(180deg);
}

.hint {
  width: 30%;
  height: 30%;
  opacity: 0.2;
  border-radius: 50%;
  transition-duration: .5s;
  transition-property: opacity, background-color;
  transition-delay: 0;

}

:host-context([data-game-state^=endBy]) {
  .stone {
    transition: none;
  }

  .hint {
    display: none;
  }
}

.hint.black {
  background-color: black;
  transition-delay: var(--put-hint-delay);
}

.hint.white {
  background-color: white;
  transition-delay: var(--put-hint-delay);
}


@keyframes glow {
  0% {
    box-shadow: 0px 0px 0px 0px #34ffa04a;
  }

  50% {
    box-shadow: 0px 0px 0px 8px #34ffa04a;
  }

  100% {
    box-shadow: 0px 0px 0px 0px #34ffa04a;
  }
}